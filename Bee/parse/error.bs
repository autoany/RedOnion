use sys
pkg bee

def parseError exception
	
	line string get set.protected
	;; line with error
	lnum int get set.protected
	;; line number of error
	at int get set.protected
	;; start of erroneous token/span
	end int get set.protected
	;; end of erroneous token/span
	col int get set.protected
	;; column of erroneous token/span
	endln int get set.protected
	;; line number of end of erroneous token/span

	init private, scanner
		line	= scanner.line
		endln	=
		lnum	= scanner.lnum
		at		= scanner.at
		end		= scanner.end
		col		= scanner.col

	.ctor scanner
		init scanner
	.ctor scanner, message string
		base message
		init scanner
	.ctor scanner, message string, params
		base string.format message, params
		init scanner
	.ctor scanner, inner exception
		base null, inner
		init scanner
	.ctor scanner, message string, inner exception
		base message, inner
		init scanner
	.ctor scanner, inner exception, message string
		base message, inner
		init scanner
	.ctor scanner, inner exception, message string, params
		base string.format(message, params), inner
		init scanner

def parser partial

	checkUnary this, unary bool, expect bool protected
		if unary == expect; return
		if expect; raise expectedUnary this
		raise expectedBinary this

	def expectedUnary parseError
		.ctor scanner
			base scanner, "Expected argument or unary operator"
	def expectedBinary parseError
		.ctor scanner
			base scanner, "Expected binary or postfix operator"

	def badEscapeSequence parseError
		.ctor scanner
			base scanner, "Bad escape sequence"

