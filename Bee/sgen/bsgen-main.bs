use bee.run, sys: text, lang, cols.gen, diag
pkg bee

@@ B# source generator from pseudo-code (do not use with compressed code from codeGenerator! pseudoGenerator only!)
def bsGenerator run.abstractEngine partial
; debuggerDisplay "{Current}/{Inside}: {Sb}"

	culture cultureInfo get set = cultureInfo.invariantCulture
	;; culture settings for formatting (invariant by default)

//--------------------------------------------------------------------------------------------------

	toString string override
		return sb.toString()
	reset this virtual
		sb.length = 0
		current	= 0
		inside	= 0
		indent	= 0

	@@ generate source
	eval this, code byte[], at int, size int override
		reset()
		if size == 0; return
		var end = at + size
		for
			process code, ref at
			if at >= end
				break
			line()

protected:

	var sb protected = new stringBuilder
	;; source builder
	var indent int = 0
	;; indentation for NEXT line (make sure to update this before calling @line)

	@@ append one character to output
	write this, char
		sb.append char
	@@ append string to output
	write this, string
		sb.append string
	@@ append formatted string to output (according to @culture which is invariant by default)
	write this, string, params
		sb.appendFormat culture, string, params

	@@ end current line and append indentation (immediatelly, make sore to adjust indent before using this!)
	line this
		sb.appendLine()
		if indent > 0; sb.append '\t', indent