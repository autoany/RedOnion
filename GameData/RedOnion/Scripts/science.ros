var done = false
var wnd = new ui.window false, "Science"
wnd.closed += def => done = true
var situation = wnd.addLabel()
var rowbox = wnd.add new ui.scrollbox
rowbox.width = 200
rowbox.height = 200

var rows = new list
var dict = new dictionary

def row_ready
  for var sci in this.sci
    if sci.ready
      return true
   return false

def row_click button
  var row = button.tag
  for var sci in row.sci
    if sci.perform(false)
      row.button.enabled = row.ready()
      break      

def refresh
  for var row in rows
    row.present = false
    row.sci.clear()
  for var sci in list ship.science // make a copy in case we get interrupted
    var row = dict[sci.experimentId]
    if row == null
      row = new object
      row.id = sci.experimentId
      row.sci = new list
      row.ready = row_ready
      row.panel = rowbox.addHorizontal()
      row.panel.flexWidth = 1
      row.label = row.panel.addLabel sci.experimentId
      row.label.flexWidth = 1
      row.button = row.panel.addButton "DO", row_click
      row.button.tag = row
      dict[sci.experimentId] = row
      rows.add row
    row.present = true
    row.sci.add sci
  for var i = 0; i < rows.count
    var row = rows[i]
    if !row.present
      list.removeAt i
      dict.remove row.id
      row.panel.dispose
    else
      row.button.enabled = row.ready()
      i++
  situation.text = "{0}, {1}, {2}".format science.body, science.situation, science.biomeName
var refreshing = false
var lastRefresh = time.never
def tryRefresh
  if refreshing
    return
  refreshing = true
  for var i = 0; i < 3; i++
    try
      refresh
      break
    catch var e
      print "Refresh: {0}", e
      var from = time.now
      while time.since(from) < 1
        wait
  refreshing = false

var all = wnd.addButton "Gather All", def
  all.enabled = false
  try
    for var row in rows
      if row.button.enabled
        row_click row.button
  catch var e
    print "Gather All: {0}", e
  finally
    all.enabled = true

try

  var subs = null // finally retains try-context but we want to call refresh first
  tryRefresh
  subs = science.situationChanged tryRefresh
  wnd.show
  while !done
    wait
    if time.since(lastRefresh) >= 10
      tryRefresh

finally
  wnd.dispose
  if subs != null
    subs.remove
