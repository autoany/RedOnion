var other = ship.target
if other is types.part
  other = other.ship
if other is types.ship
  var ship = global.ship
  var vd = [
    new vector.draw,
    new vector.draw,
    new vector.draw,
    new vector.draw,
    new vector.draw,
    new vector.draw]
  vd[0].scale = 10
  vd[1].scale = 10
  vd[2].scale = 8
  vd[2].color = ui.color.blue
  vd[3].scale = 8
  vd[3].color = ui.color.blue
  vd[4].scale = 15
  vd[4].color = ui.color.green
  vd[5].scale = 15
  vd[5].color = ui.color.green
  vd[0].reference = ship
  vd[1].reference = other
  vd[2].reference = ship
  vd[3].reference = other
  vd[4].reference = ship
  vd[5].reference = other
  def vectors
    vd[0].vector = ship.forward
    vd[1].vector = other.forward
    vd[2].vector = ship.velocity.normalized
    vd[3].vector = other.velocity.normalized
    vd[4].vector = (other.position - ship.position).normalized
    vd[5].vector = (ship.position - other.position).normalized
  vectors
  for var d in vd
    d.show
  system.update.add vectors
  for
    wait

else
  var done = false

  var vd = [
    new vector.draw,
    new vector.draw,
    new vector.draw,
    new vector.draw,
    new vector.draw,
    new vector.draw,
    new vector.draw]
  vd[0].scale = 10
  vd[1].color = ui.color.red
  vd[1].scale = 10
  vd[2].color = ui.color.green
  vd[2].scale = 10
  vd[3].color = ui.color.blue
  vd[3].scale = 10
  vd[4].color = ui.color.gray
  vd[4].scale = 5
  vd[5].color = ui.color.blue
  vd[5].scale = 12
  vd[5].width = 0.3
  vd[6].color = ui.color.gray
  vd[6].scale = 7
  vd[6].width = 0.3
  def vectors
    vd[0].vector = ship.forward
    vd[1].vector = ship.away
    vd[2].vector = ship.east
    vd[3].vector = ship.north
    vd[4].vector = ship.up
    vd[5].vector = ship.forward.exclude ship.away
    vd[6].vector = ship.away.exclude ship.forward
  vectors
  for var d in vd
    d.show

  def display
    var wnd = new ui.window

    def makeRow label
      var row = wnd.add new ui.panel
      row.layout = ui.layout.horizontal
      var lbl = row.add new ui.label
      lbl.text = label
      lbl.minWidth = 120
      lbl.flexWidth = 0
      var box = row.add new ui.textBox
      box.minWidth = 80
      box.flexWidth = 1
      return box

    var ele = makeRow "Pitch/Elevation: "
    var hdg = makeRow "Yaw/Heading: "
    var bnk = makeRow "Roll/Bank: "

    wnd.closed.add def
      done = true
      wnd.dispose

    return def
      ele.text = string ship.pitch
      hdg.text = string ship.heading
      bnk.text = string ship.roll

  var subs = [
    system.update(vectors),
    system.update(display())
  ]

  until done
    wait

  for var e in subs
    e.remove
  for var d in vd
    d.hide
