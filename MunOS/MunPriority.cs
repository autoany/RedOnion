using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MunOS
{
	/// <summary>
	/// Thread execution priority.
	/// </summary>
	public enum MunPriority : byte
	{
		/// <summary>
		/// Highest priority - executed every FixedUpdate if possible.
		/// May use upto 50% of the total time available to the update.
		/// Suitable for autopilot - steering and throttling.
		/// </summary>
		Realtime,
		/// <summary>
		/// .NET callbacks, mostly from UI (e.g. Button.Click).
		/// These are usually generated by scripting engine
		/// (converting functions to callbacks and back).
		/// At least one is executed every other FixedUpdate,
		/// downto 40% mark (therefore upto 60% of total time if no Realtime).
		/// </summary>
		Callback,
		/// <summary>
		/// Low priority - executed only on low load
		/// (downto 60% mark which means only if Realtime+Callback did not already used 40%),
		/// but one at least every 10th FixedUpdate.
		/// </summary>
		Idle,
		/// <summary>
		/// Mixed priority - executed every FixedUpdate if possible,
		/// but after all the other priorities. The remaining time
		/// is divided between all main threads, until a threashold is reached.
		/// </summary>
		/// <remarks>
		/// Main threads can be reordered by the engine based on time used in last update.
		/// </remarks>
		Main,
	}
}
